@startuml
skinparam class{
    BorderColor black
    BackgroundColor #a3a3a3
}

class Character{
-GameDataRef _data;
-sf::Sprite sprite;
-sf::Vector2f position;
-sf::Texture texture;
-sf::Texture texture_flip;
-sf::Texture run_right1;
-sf::Texture run_right2;
-sf::Texture run_left1;
-sf::Texture run_left2;
-bool flip = false;
-sf::Clock animationClock;
-int animationRun = 0;
-bool air_texture = false;

+sf::Vector2f velocity = {0,0};
+float speed = 400.0f;
+float jump_speed = 600.0f;
+float slow_down = 0.0f, slow_down_ground = 40.0f, slow_down_air = 5.0f;
+float speed_up = 0.0f, speed_up_ground = 40.0f, speed_up_air = 30.0f;
+int max_jump =1, jump = 0;
+bool jump_done = false, on_ground = false;


-void flipTexture();

+Character(GameDataRef data);
+void update();
+void setTexture(6 Textures);
+void setPosition(const sf::Vector2f& position_);
+void setPosition(const float& x, const float& y);
+sf::Vector2f getPosition();
+void draw(sf::RenderWindow& renderWindow);
+void move(sf::Vector2f movement);
+void move(const float& x, const float& y);
+sf::Vector2f nextPosition(sf::Vector2f movement);
+sf::Sprite nextSprite(sf::Vector2f movement);
+sf::Sprite& getSprite();
+bool objectCollisionAndFalling(const sf::Sprite &object, const float& dt);
+void updateVelocity(const float& dt);
+void respawn(sf::Vector2f spawn);
+void characterKeyboardInput();
}

@enduml